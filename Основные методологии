1. Waterfall (каскадная модель)
Ее суть заключается в последовательном выполнении этапов жизненного цикла: анализ, дизайн, разработка, тестирование, релиз и поддержка. Каждая стадия должна быть завершена до начала новой. 
Плюсы:
- Устойчива к обновлению кадров.
- Дисциплинирует, благодаря плану и чёткой последовательности этапов и строгому менеджменту.
- Гибкая на ранних этапах. До этапа разработки можно вполне легко вносить изменения в предыдущие этапы.
- Прозрачна. Заранее понятно, на каком этапе что будет происходить, поэтому становится проще прогнозировать бюджеты и набирать команду.
Минусы:
- Очень много документов, который нужно постоянно актуализировать.
- Подробнейший план может создать не только иллюзию безопасности, но и ложные впечатления о работе над проектом.
- Пользователя и заказчика полностью изолируют от процесса разработки. В итоге первый не может постепенно привыкать к продукту, а второй — вносить корректировки, если что-то идёт не так.
- Все требования должны быть сразу известны.
- Не дает делать шагов назад, что затрудняет тестирование, которое чаще всего осуществляется в конце разработки продукта.

2. Agile
Работа над задачами ведется параллельно саморганизованными командами, доработки и правки ошибок можно вносить на ходу. Документация не так важна в Agile. Основной упор делается на работающий продукт.
Управление проектами в Agile разделяют на этапы и устанавливают сроки к задачам.
Плюсы:
- Из-за гибкости, можно быстро реагировать на изменения и вносить их, чтобы создать полезный продукт для клиента.
- Снижается вероятность провала, потому что тестирование и сбор обратной связи от заказчика проходят после каждого спринта.
- Увеличивается вовлеченность команды. Благодаря постоянному взаимодействию сотрудников и отсутствию микроменеджмента, каждый участник видит свое влияние на проект.
- Сокращается работа ведения документов, в которых фиксируется каждый шаг.
- Улучшается коммуникация между сотрудниками.
Минусы:
- Нет четкого плана для проекта.
- Нужна постоянная коммуникация.
- Сложное погружение новых сотрудников. Из-за того, что команда работает небольшими итерациями, нового коллегу придется погружать в несколько прошедших периодов.
- Проделанная работа может пропасть. Если продукт потеряет ценность для клиента, команда должна изменить цель проекта.
Agile имеет два отдельных гибких подхода:

2.1. Scrum
Каждый проект разбивается на небольшие итерации продолжительностью от 1 до 4 недель — спринты. Если спринт уже начат, то в него не должно вноситься изменений — не получится добавить новые задачи в текущий спринт.
Плюсы:
- Возможность разработать новый продукт, аналогов которого нет на рынке.
- Фокусировка на пользе для потребителя. 
- Возможность менять продукт. 
- Снижение риска за счет тестирования. Скрам позволяет быстро выпустить тестовый вариант продукта, оценить его работоспособность и затем приступить к доработке.
- Вовлеченные сотрудники. Команда вовлекается в работу, потому что она работает только над одним проектом и видит результат от своих усилий.
Минусы:
- Не подходит для случаев, когда у команды много задач и много заказчиков.
- Меньше предсказуемости.
- Необходимо обучение команды.

2.2. Kanban
Это способ управления рабочим процессом, основанный на визуализации целей, задач и прогресса. Проекты разбиваются на этапы рабочего процесса с помощью канбан-доски. Каждый столбец такой доски представляет этапы работы, которые проходит задача на пути к завершению.
Плюсы:
- Канбан предлагает оценивать эффективность с точки зрения сервиса: насколько заказчик остался доволен, с какими задачами обычно обращаются клиенты, сколько они готовы ждать.
- Главный показатель эффективности – это среднее время прохождения задачи по доске.
- Чтобы повысить эффективность, в канбане ограничивают количество задач, находящихся в работе.
- Вся команда едина – нет ролей владельца продукта и scrum-мастера.
Минусы:
- Метод будет неэффективен, если нужно разработать новый сложный продукт.

3. V-ModelV-образная модель)
V-образная модель является развитием каскадной модели. Поэтому она обладает всеми достоинствами последней. 
V-образная модель применима к системам, которым особенно важно бесперебойное функционирование.
Плюсы:
- Планирование на ранних стадиях разработки системы ее тестирования. Стадия тестирования проводится одновременно с соответствующей стадией разработки.
- Обеспечение аттестации и верификации всех промежуточных результатов разработки.
- Упрощение отслеживания хода процесса разработки, возможность более реального использования графика проекта.
- Простота в использовании.
Минусы:
- Cложность поддержки параллельных событий.
- Непредусмотренность итераций между фазами.
- Невозможность внесения динамических изменений в требования на разных этапах жизненного цикла.
- Поздние сроки тестирования требований в жизненном цикле, что оказывает существенное влияние на график выполнения проекта при необходимости выполнить их изменения.
- Отсутствие в модели действий, направленные на анализ рисков.




Список литературы:
https://habr.com/ru/companies/edison/articles/269789/ (Дата обращения: 03.11.2023)
https://weeek.net/ru/blog/chto-takoe-waterfall (Дата обращения: 03.11.2023)
https://studfile.net/preview/1444530/page:5/ (Дата обращения: 03.11.2023)
https://kaiten.ru/blog/waterfall-agile-scrum-kanban/ (Дата обращения: 03.11.2023)
https://kachestvo.pro/kachestvo-upravleniya/proektnoe-upravlenie/agile-scrum-waterfall-i-kanban-dlya-upravleniya-proektami-v-kompanii/ (Дата обращения: 03.11.2023)
